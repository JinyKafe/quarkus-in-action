### Listing 4.11 The JSON request to make a reservation for the car with ID 1

POST http://localhost:8081/reservation
accept: application/json
Content-Type: application/json

{
  "carId": 1,
  "startDay": "2025-04-11",
  "endDay": "2025-04-16"
}

### Listing 4.12 The JSON response acknowledging the reservation

GET http://localhost:8081/reservation/availability?endDate=2024-01-04&startDate=2024-01-02
accept: application/json

### Listing 4.21 A GraphQL query for all fields of all cars in the fleet
GRAPHQL http://localhost:8083/graphql

query {
    cars {
        id
        licensePlateNumber
        model
        manufacturer
    }
}

### Listing 4.23 The register mutation for adding new cars into the fleet
GRAPHQL http://localhost:8083/graphql

mutation {
    register(car: {
        licensePlateNumber: "O123"
        model: "406"
        manufacturer: "Peugeot"
    }) {
        licensePlateNumber
        model
        manufacturer
        id
    }
}

### Listing 4.25 The GraphQL schema of the Inventory service
GET http://localhost:8083/graphql/schema.graphql

### Listing 4.28 Calling the reservation availability endpoint

GET http://localhost:8081/reservation/availability
accept: application/json
Content-Type: application/json

### Bidirectional streaming call to add multiple cars
GRPC localhost:9000/inventory.InventoryService/add
[
  {
    "licensePlateNumber": "ABC123",
    "manufacturer": "Toyota",
    "model": "Corolla"
  },
  {
    "licensePlateNumber": "XYZ789",
    "manufacturer": "Honda",
    "model": "Civic"
  }
]



